2022-11-08 16:05:11,975 INFO    MainThread:2944 [wandb_setup.py:_flush():68] Configure stats pid to 2944
2022-11-08 16:05:11,975 INFO    MainThread:2944 [wandb_setup.py:_flush():68] Loading settings from C:\Users\eclip\.config\wandb\settings
2022-11-08 16:05:11,975 INFO    MainThread:2944 [wandb_setup.py:_flush():68] Loading settings from C:\Users\eclip\Documents\GitHub\panda-gym\examples\wandb\settings
2022-11-08 16:05:11,975 INFO    MainThread:2944 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True'}
2022-11-08 16:05:11,976 INFO    MainThread:2944 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'examples\\train.py', 'program': 'C:\\Users\\eclip\\Documents\\GitHub\\panda-gym\\examples\\train.py'}
2022-11-08 16:05:11,976 INFO    MainThread:2944 [wandb_setup.py:_flush():68] Applying login settings: {'api_key': '***REDACTED***'}
2022-11-08 16:05:11,976 INFO    MainThread:2944 [wandb_setup.py:_flush():68] Applying login settings: {'api_key': '***REDACTED***'}
2022-11-08 16:05:11,976 INFO    MainThread:2944 [wandb_init.py:_log_setup():476] Logging user logs to run_data\wandb\run-20221108_160511-313yv0p4\logs\debug.log
2022-11-08 16:05:11,976 INFO    MainThread:2944 [wandb_init.py:_log_setup():477] Logging internal logs to run_data\wandb\run-20221108_160511-313yv0p4\logs\debug-internal.log
2022-11-08 16:05:11,977 INFO    MainThread:2944 [wandb_init.py:init():516] calling init triggers
2022-11-08 16:05:11,977 INFO    MainThread:2944 [wandb_init.py:init():519] wandb.init called with sweep_config: {}
config: {'policy_type': 'MultiInputPolicy', 'total_timesteps': 400000, 'env_name': 'PandaReachEvadeObstacles-v3', 'replay_buffer_class': 'HerReplayBuffer', 'control_type': ''}
2022-11-08 16:05:11,978 INFO    MainThread:2944 [wandb_init.py:init():569] starting backend
2022-11-08 16:05:11,978 INFO    MainThread:2944 [wandb_init.py:init():573] setting up manager
2022-11-08 16:05:11,983 INFO    MainThread:2944 [backend.py:_multiprocessing_setup():102] multiprocessing start_methods=spawn, using: spawn
2022-11-08 16:05:11,994 INFO    MainThread:2944 [wandb_init.py:init():580] backend started and connected
2022-11-08 16:05:12,001 INFO    MainThread:2944 [wandb_init.py:init():658] updated telemetry
2022-11-08 16:05:12,052 INFO    MainThread:2944 [wandb_init.py:init():693] communicating run to backend with 60 second timeout
2022-11-08 16:05:12,460 INFO    MainThread:2944 [wandb_run.py:_on_init():2000] communicating current version
2022-11-08 16:05:12,546 INFO    MainThread:2944 [wandb_run.py:_on_init():2004] got version response upgrade_message: "wandb version 0.13.5 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2022-11-08 16:05:12,546 INFO    MainThread:2944 [wandb_init.py:init():728] starting run threads in backend
2022-11-08 16:05:12,724 INFO    MainThread:2944 [wandb_run.py:_console_start():1980] atexit reg
2022-11-08 16:05:12,725 INFO    MainThread:2944 [wandb_run.py:_redirect():1838] redirect: SettingsConsole.WRAP_RAW
2022-11-08 16:05:12,725 INFO    MainThread:2944 [wandb_run.py:_redirect():1903] Wrapping output streams.
2022-11-08 16:05:12,725 INFO    MainThread:2944 [wandb_run.py:_redirect():1925] Redirects installed.
2022-11-08 16:05:12,725 INFO    MainThread:2944 [wandb_init.py:init():765] run started, returning control to user process
2022-11-08 16:05:12,903 INFO    MainThread:2944 [wandb_run.py:_tensorboard_callback():1296] tensorboard callback: runs/313yv0p4\TD3_1, True
2022-11-08 16:05:12,952 INFO    MainThread:2944 [wandb_run.py:_config_callback():1160] config_cb None None {'algo': 'TD3', 'policy_class': "<class 'stable_baselines3.td3.policies.MultiInputPolicy'>", 'device': 'cuda', 'env': '<stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001937293DF30>', '_vec_normalize_env': 'None', 'verbose': 1, 'policy_kwargs': '{}', 'observation_space': "Dict('achieved_goal': Box(-10.0, 10.0, (3,), float32), 'desired_goal': Box(-10.0, 10.0, (3,), float32), 'observation': Box(-10.0, 10.0, (16,), float32))", 'action_space': 'Box(-1.0, 1.0, (7,), float32)', 'n_envs': 1, 'num_timesteps': 0, '_total_timesteps': 400000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1667919912898204100, 'policy': 'MultiInputPolicy(\n  (actor): Actor(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (mu): Sequential(\n      (0): Linear(in_features=22, out_features=400, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=400, out_features=300, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=300, out_features=7, bias=True)\n      (5): Tanh()\n    )\n  )\n  (actor_target): Actor(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (mu): Sequential(\n      (0): Linear(in_features=22, out_features=400, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=400, out_features=300, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=300, out_features=7, bias=True)\n      (5): Tanh()\n    )\n  )\n  (critic): ContinuousCritic(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=29, out_features=400, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=400, out_features=300, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=300, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=29, out_features=400, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=400, out_features=300, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=300, out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=29, out_features=400, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=400, out_features=300, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=300, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=29, out_features=400, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=400, out_features=300, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=300, out_features=1, bias=True)\n    )\n  )\n)', 'learning_rate': 0.001, 'tensorboard_log': 'runs/313yv0p4', 'lr_schedule': '<function constant_fn.<locals>.func at 0x000001937293AE60>', '_last_obs': "OrderedDict([('achieved_goal', array([[ 3.8439669e-02, -2.1944723e-12,  1.9740014e-01]], dtype=float32)), ('desired_goal', array([[-0.180344  ,  0.14353259,  0.22870879]], dtype=float32)), ('observation', array([[ 3.8439669e-02, -2.1944723e-12,  1.9740014e-01,  0.0000000e+00,\n        -0.0000000e+00,  0.0000000e+00,  5.0327623e-01,  5.2442962e-01,\n         4.9986359e-01,  4.3921736e-01,  1.8931034e-01,  1.9315879e-01,\n         1.4126146e-01,  7.1904391e-02,  7.7444576e-02,  8.9873433e-02]],\n      dtype=float32))])", '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_logger': '<stable_baselines3.common.logger.Logger object at 0x0000019372923370>', '_custom_logger': 'False', 'buffer_size': 1000000, 'batch_size': 100, 'learning_starts': 100, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=1, unit=<TrainFrequencyUnit.EPISODE: 'episode'>)", 'actor': 'Actor(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (mu): Sequential(\n    (0): Linear(in_features=22, out_features=400, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=400, out_features=300, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=300, out_features=7, bias=True)\n    (5): Tanh()\n  )\n)', 'replay_buffer': '<stable_baselines3.her.her_replay_buffer.HerReplayBuffer object at 0x000001937293DC60>', 'use_sde_at_warmup': 'False', 'policy_delay': 2, 'target_noise_clip': 0.5, 'target_policy_noise': 0.2, 'actor_target': 'Actor(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (mu): Sequential(\n    (0): Linear(in_features=22, out_features=400, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=400, out_features=300, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=300, out_features=7, bias=True)\n    (5): Tanh()\n  )\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=29, out_features=400, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=400, out_features=300, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=300, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=29, out_features=400, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=400, out_features=300, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=300, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=29, out_features=400, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=400, out_features=300, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=300, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=29, out_features=400, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=400, out_features=300, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=300, out_features=1, bias=True)\n  )\n)', 'actor_batch_norm_stats': '[]', 'critic_batch_norm_stats': '[]', 'actor_batch_norm_stats_target': '[]', 'critic_batch_norm_stats_target': '[]'}
2022-11-08 17:54:22,117 INFO    MainThread:2944 [wandb_run.py:_finish():1746] finishing run raikowand/panda-gym/313yv0p4
2022-11-08 17:54:22,117 INFO    MainThread:2944 [wandb_run.py:_atexit_cleanup():1949] got exitcode: 0
2022-11-08 17:54:22,117 INFO    MainThread:2944 [wandb_run.py:_restore():1932] restore
2022-11-08 17:54:22,117 INFO    MainThread:2944 [wandb_run.py:_restore():1938] restore done
2022-11-08 17:54:35,854 INFO    MainThread:2944 [wandb_run.py:_footer_history_summary_info():3377] rendering history
2022-11-08 17:54:35,855 INFO    MainThread:2944 [wandb_run.py:_footer_history_summary_info():3409] rendering summary
2022-11-08 17:54:35,857 INFO    MainThread:2944 [wandb_run.py:_footer_sync_info():3333] logging synced files
